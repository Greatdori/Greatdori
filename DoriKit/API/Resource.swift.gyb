//===---*- Greatdori! -*---------------------------------------------------===//
//
// Resource.swift.gyb
//
// This source file is part of the Greatdori! open source project
//
// Copyright (c) 2025 the Greatdori! project authors
// Licensed under Apache License v2.0
//
// See https://greatdori.memz.top/LICENSE.txt for license information
// See https://greatdori.memz.top/CONTRIBUTORS.txt for the list of Greatdori! project authors
//
//===----------------------------------------------------------------------===//

import SwiftUI
import Foundation
private import Builtin

extension DoriAPI.Locale {
    @inlinable
    public var iconImageURL: URL {
        .init(string: "https://bestdori.com/res/icon/\(self.rawValue).svg")!
    }
}

extension DoriAPI.Attribute {
    @inlinable
    public var iconImageURL: URL {
        .init(string: "https://bestdori.com/res/icon/\(self.rawValue).svg")!
    }
}

%{
    properties = ["PreviewEvent", "Event"]
}%
% for property in properties:
extension DoriAPI.Event.${property} {
    @inlinable
    public var bannerImageURL: URL {
        .init(string: "https://bestdori.com/assets/\(self.startAt.availableLocale()!.rawValue)/event/\(self.assetBundleName)/images_rip/banner.png")!
    }
}
% end
extension DoriAPI.Event.EventCharacter {
    @inlinable
    public var iconImageURL: URL {
        .init(string: "https://bestdori.com/res/icon/chara_icon_\(self.characterID).png")!
    }
}

extension DoriAPI.Band.Band {
    @inlinable
    public var logoImageURL: URL {
        var id = String(self.id)
        while id.count < 3 {
            id = "0" + id
        }
        return .init(string: "https://bestdori.com/assets/\(self.bandName.availableLocale()!.rawValue)/band/logo/\(id)_rip/logoL.png")!
    }
    
    @inlinable
    public var iconImageURL: URL {
        .init(string: "https://bestdori.com/res/icon/band_\(self.id).svg")!
    }
}

%{
    properties = ["PreviewCharacter", "BirthdayCharacter", "Character"]
}%
% for property in properties:
extension DoriAPI.Character.${property} {
    @inlinable
    public var keyVisualImageURL: URL {
        var id = String(self.id)
        while id.count < 3 {
            id = "0" + id
        }
        return .init(string: "https://bestdori.com/assets/\(self.characterName.availableLocale()!.rawValue)/ui/character_kv_image/\(id)_rip/image.png")!
    }
    
    @inlinable
    public var iconImageURL: URL {
        .init(string: "https://bestdori.com/res/icon/chara_icon_\(self.id).png")!
    }
}
% end

%{
    properties = ["PreviewCard", "Card"]
}%
% for property in properties:
extension DoriAPI.Card.${property} {
    @inlinable
    public var coverNormalImageURL: URL {
        .init(string: "https://bestdori.com/assets/\(self.releasedAt.availableLocale()!.rawValue)/characters/resourceset/\(self.resourceSetName)_rip/card_normal.png")!
    }
    @inlinable
    public var coverAfterTrainingImageURL: URL? {
        if self.rarity >= 4 || (self.rarity >= 3 && [.others, .campaign, .birthday].contains(self.type)) {
            .init(string: "https://bestdori.com/assets/\(self.releasedAt.availableLocale()!.rawValue)/characters/resourceset/\(self.resourceSetName)_rip/card_after_training.png")!
        } else {
            nil
        }
    }
    
    @inlinable
    public var thumbNormalImageURL: URL {
        var ripID = String(Int(Double(self.id) / 50))
        while ripID.count < 5 {
            ripID = "0" + ripID
        }
        return .init(string: "https://bestdori.com/assets/\(self.releasedAt.availableLocale()!.rawValue)/thumb/chara/card\(ripID)_rip/\(self.resourceSetName)_normal.png")!
    }
    @inlinable
    public var thumbAfterTrainingImageURL: URL? {
        if self.rarity >= 4 || (self.rarity >= 3 && [.others, .campaign, .birthday].contains(self.type)) {
            var ripID = String(Int(Double(self.id) / 50))
            while ripID.count < 5 {
                ripID = "0" + ripID
            }
            return .init(string: "https://bestdori.com/assets/\(self.releasedAt.availableLocale()!.rawValue)/thumb/chara/card\(ripID)_rip/\(self.resourceSetName)_after_training.png")!
        } else {
            return nil
        }
    }
    
    @inlinable
    public var gachaVoiceURL: URL {
        .init(string: "https://bestdori.com/assets/\(self.releasedAt.availableLocale()!.rawValue)/sound/voice/gacha/limitedspin_rip/\(self.resourceSetName).mp3")!
    }
}
% end
extension DoriAPI.Card.Card {
    @inlinable
    public var animationVideoURL: URL? {
        if let bundleName = self.animation?.assetBundleName {
            .init(string: "https://bestdori.com/assets/\(self.releasedAt.availableLocale()!.rawValue)/movie/animation_episode/\(bundleName)_rip/\(bundleName).mp4")!
        } else {
            nil
        }
    }
}

extension DoriAPI.Comic.Comic {
    private func idForURL() -> String {
        var id = String(self.id)
        var fixFlag = false
        if id.count == 6 {
            id.removeFirst(2)
            fixFlag = true
        }
        if id.count == 4 {
            id.removeFirst()
        }
        if fixFlag {
            id = "100" + id
        }
        while id.count < 3 {
            id = "0" + id
        }
        return id
    }
    
    public var imageURL: URL? {
        let id = idForURL()
        return switch self.type {
        case .singleFrame:
            .init(string: "https://bestdori.com/assets/\(self.publicStartAt.availableLocale()!.rawValue)/comic/comic_singleframe/comic_\(id)_rip/comic_\(id).png")
        case .fourFrame:
            .init(string: "https://bestdori.com/assets/\(self.publicStartAt.availableLocale()!.rawValue)/comic/comic_fourframe/comic_fourframe_\(id)_rip/comic_fourframe_\(id).png")
        case .none:
            nil
        }
    }
    
    public var thumbImageURL: URL? {
        let id = idForURL()
        return switch self.type {
        case .singleFrame:
            .init(string: "https://bestdori.com/assets/\(self.publicStartAt.availableLocale()!.rawValue)/comic/comic_singleframe_thumbnail/comic_\(id)_rip/comic_\(id).png")
        case .fourFrame:
            .init(string: "https://bestdori.com/assets/\(self.publicStartAt.availableLocale()!.rawValue)/comic/comic_fourframe_thumbnail/comic_fourframe_\(id)_rip/comic_fourframe_\(id).png")
        case .none:
            nil
        }
    }
}

%{
    properties = ["PreviewCostume", "Costume"]
}%
% for property in properties:
extension DoriAPI.Costume.${property} {
    @inlinable
    public var thumbImageURL: URL {
        let groupID = String(Int(Double(self.id) / 50))
        return .init(string: "https://bestdori.com/assets/\(self.publishedAt.availableLocale()!.rawValue)/thumb/costume/group\(groupID)_rip/\(self.assetBundleName).png")!
    }
}
% end

%{
    properties = ["PreviewGacha", "Gacha"]
}%
% for property in properties:
extension DoriAPI.Gacha.${property} {
    @inlinable
    public var bannerImageURL: URL {
        if !bannerAssetBundleName.isEmpty {
            .init(string: "https://bestdori.com/assets/\(self.publishedAt.availableLocale(prefer: .jp)!.rawValue)/homebanner_rip/\(self.bannerAssetBundleName).png")!
        } else {
            .init(string:  "https://bestdori.com/assets/\(self.publishedAt.availableLocale(prefer: .jp)!.rawValue)/gacha/screen/\(self.resourceName)_rip/logo.png")!
        }
    }
}
% end
extension DoriAPI.Gacha.Gacha.PaymentMethod.Method {
    public var iconImageURL: URL? {
        switch self {
        case .free: nil
        case .paidStar, .freeStar: URL(string: "https://bestdori.com/assets/\(DoriAPI.preferredLocale.rawValue)/thumb/common_rip/star.png")
        case .normalTicket: URL(string: "https://bestdori.com/assets/\(DoriAPI.preferredLocale.rawValue)/thumb/common_rip/gachaTicket1.png")
        case .overThe3StarTicket: URL(string: "https://bestdori.com/assets/\(DoriAPI.preferredLocale.rawValue)/thumb/common_rip/gachaTicket2.png")
        case .overThe4StarTicket: URL(string: "https://bestdori.com/assets/\(DoriAPI.preferredLocale.rawValue)/thumb/common_rip/gachaTicket5.png")
        case .fixed5StarTicket: URL(string: "https://bestdori.com/assets/\(DoriAPI.preferredLocale.rawValue)/thumb/common_rip/gachaTicket4.png")
        @unknown default:
            Builtin.unreachable()
        }
    }
}

extension DoriAPI.Song.DifficultyType {
    @inlinable
    public var color: Color {
        switch self {
        case .easy: .init(red: 142 / 255, green: 180 / 255, blue: 253 / 255)
        case .normal: .init(red: 166 / 255, green: 246 / 255, blue: 146 / 255)
        case .hard: .init(red: 251 / 255, green: 223 / 255, blue: 140 / 255)
        case .expert: .init(red: 255 / 255, green: 137 / 255, blue: 139 / 255)
        case .special: .init(red: 143 / 255, green: 131 / 255, blue: 203 / 255)
        }
    }
}

%{
    properties = ["PreviewSong", "Song"]
}%
% for property in properties:
extension DoriAPI.Song.${property} {
    @inlinable
    public var jacketImageURL: URL {
        let jacketID = Int(ceil(Double(self.id) / 10) * 10)
        return .init(string: "https://bestdori.com/assets/\(self.publishedAt.availableLocale()!.rawValue)/musicjacket/musicjacket\(jacketID)_rip/assets-star-forassetbundle-startapp-musicjacket-musicjacket\(jacketID)-\(self.jacketImage[0])-jacket.png")!
    }
}
% end
