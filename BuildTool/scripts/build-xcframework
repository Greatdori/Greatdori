#!/bin/bash

#===---*- Greatdori! -*----------------------------------------------------===#
#
# ci_post_clone.sh
#
# This source file is part of the Greatdori! open source project
#
# Copyright (c) 2025 the Greatdori! project authors
# Licensed under Apache License v2.0
#
# See https://greatdori.memz.top/LICENSE.txt for license information
# See https://greatdori.memz.top/CONTRIBUTORS.txt for the list of Greatdori! project authors
#
#===-----------------------------------------------------------------------===#

SCRIPT_PATH="$( cd -- "$(dirname "$0")" >/dev/null 2>&1 ; pwd -P )"
SRCROOT="$SCRIPT_PATH/../.."
cd "$SRCROOT"
SRCROOT=$(pwd -P)

rm -rf ./build >/dev/null 2>&1
mkdir build >/dev/null 2>&1

set -euo pipefail

BUILD_MACOS_START=$(date +%s%N)
xcodebuild -project Greatdori.xcodeproj -scheme DoriKit -configuration Release -derivedDataPath ./build -destination "platform=macOS" build

BUILD_MAC_CATALYST_START=$(date +%s%N)
xcodebuild -project Greatdori.xcodeproj -scheme DoriKit -configuration Release -derivedDataPath ./build -destination "platform=macOS,variant=Mac Catalyst" build

BUILD_IOS_SIMULATOR_START=$(date +%s%N)
xcodebuild -project Greatdori.xcodeproj -scheme DoriKit -configuration Release -derivedDataPath ./build -destination "generic/platform=iOS Simulator" build

BUILD_IOS_START=$(date +%s%N)
xcodebuild -project Greatdori.xcodeproj -scheme DoriKit -configuration Release -derivedDataPath ./build -destination "generic/platform=iOS" build

BUILD_WATCH_SIMULATOR_START=$(date +%s%N)
xcodebuild -project Greatdori.xcodeproj -scheme DoriKit -configuration Release -derivedDataPath ./build -destination "generic/platform=watchOS Simulator" build

BUILD_WATCHOS_START=$(date +%s%N)
xcodebuild -project Greatdori.xcodeproj -scheme DoriKit -configuration Release -derivedDataPath ./build -destination "generic/platform=watchOS" build

BUILD_END=$(date +%s%N)

# Generate XCFramework
xcodebuild -create-xcframework \
    -framework "$SRCROOT/build/Build/Products/Release/DoriKit.framework" -debug-symbols "$SRCROOT/build/Build/Products/Release/DoriKit.framework.dSYM" \
    -framework "$SRCROOT/build/Build/Products/Release-maccatalyst/DoriKit.framework" -debug-symbols "$SRCROOT/build/Build/Products/Release-maccatalyst/DoriKit.framework.dSYM" \
    -framework "$SRCROOT/build/Build/Products/Release-iphoneos/DoriKit.framework" -debug-symbols "$SRCROOT/build/Build/Products/Release-iphoneos/DoriKit.framework.dSYM" \
    -framework "$SRCROOT/build/Build/Products/Release-iphonesimulator/DoriKit.framework" -debug-symbols "$SRCROOT/build/Build/Products/Release-iphonesimulator/DoriKit.framework.dSYM" \
    -framework "$SRCROOT/build/Build/Products/Release-watchos/DoriKit.framework" -debug-symbols "$SRCROOT/build/Build/Products/Release-watchos/DoriKit.framework.dSYM" \
    -framework "$SRCROOT/build/Build/Products/Release-watchsimulator/DoriKit.framework" -debug-symbols "$SRCROOT/build/Build/Products/Release-watchsimulator/DoriKit.framework.dSYM" \
    -output "$SRCROOT/build/DoriKit.xcframework"

BUILD_MACOS_DURATION=$(awk "BEGIN {printf \"%.2f\", $((BUILD_MAC_CATALYST_START - BUILD_MACOS_START))/1000000000}")
BUILD_MAC_CATALYST_DURATION=$(awk "BEGIN {printf \"%.2f\", $((BUILD_IOS_SIMULATOR_START - BUILD_MAC_CATALYST_START))/1000000000}")
BUILD_IOS_SIMULATOR_DURATION=$(awk "BEGIN {printf \"%.2f\", $((BUILD_IOS_START - BUILD_IOS_SIMULATOR_START))/1000000000}")
BUILD_IOS_DURATION=$(awk "BEGIN {printf \"%.2f\", $((BUILD_WATCH_SIMULATOR_START - BUILD_IOS_START))/1000000000}")
BUILD_WATCH_SIMULATOR_DURATION=$(awk "BEGIN {printf \"%.2f\", $((BUILD_WATCHOS_START - BUILD_WATCH_SIMULATOR_START))/1000000000}")
BUILD_WATCHOS_DURATION=$(awk "BEGIN {printf \"%.2f\", $((BUILD_END - BUILD_WATCHOS_START))/1000000000}")
TOTAL_DURATION=$(awk "BEGIN {printf \"%.2f\", $BUILD_MACOS_DURATION + $BUILD_MAC_CATALYST_DURATION + $BUILD_IOS_SIMULATOR_DURATION + $BUILD_IOS_DURATION + $BUILD_WATCH_SIMULATOR_DURATION + $BUILD_WATCHOS_DURATION}")

format_time() {
    local seconds="$1"
    local total=${seconds%.*}
    local h=$(( total / 3600 ))
    local m=$(( (total % 3600) / 60 ))
    local s=$(( total % 60 ))
    local result=""
    if (( h > 0 )); then
        result="${h}h ${m}m ${s}s"
    else
        result="${m}m ${s}s"
    fi
    echo "$result"
}

echo -e "\n"
echo "--- Build Analyzer ---"
echo "Build Phase: Build Duration (sec)"
echo "================================="
echo "DoriKit for macOS: $BUILD_MACOS_DURATION"
echo "DoriKit for Mac Catalyst: $BUILD_MAC_CATALYST_DURATION"
echo "DoriKit for iOS Simulator: $BUILD_IOS_SIMULATOR_DURATION"
echo "DoriKit for iOS: $BUILD_IOS_DURATION"
echo "DoriKit for watchOS Simulator: $BUILD_WATCH_SIMULATOR_DURATION"
echo "DoriKit for watchOS: $BUILD_WATCHOS_DURATION"
echo "Total duration: $TOTAL_DURATION seconds ($(format_time "$TOTAL_DURATION"))"
